/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oop_template;


import java.util.Date;

import javax.swing.JOptionPane;
import static oop_template.BookingForm.formatDate;
import static oop_template.BookingForm.reservations;



/**
 *
 * @author 44759
 */
public class UpdateDeleteBooking extends javax.swing.JFrame {
    
    // maximum capacity of the venue per time slot
    final int maximumCapacity = 50;
    
    /**
     * checks if booking number exists and deletes booking
     * @author Stavroula Niarchou
     * @param bookingNumber
     * @return Boolean isDeleted
     */
    public boolean deleteBooking(String bookingNumber){
    boolean isDeleted = false;
    
        for(int i=0; i < reservations.size(); i++){
            if (bookingNumber.equals(reservations.get(i).getBookingNumber()))
            {
                reservations.remove(i);
                isDeleted = true;
                return isDeleted;
            }
        }
    return isDeleted;
    }
    // end of delete booking method
    
    /**
     * Updates booking details
     * @author Stavroula Niarchou
     * @param bookingNumber
     * @param date
     * @param time
     * @param name
     * @param phoneNumber
     * @param partySize
     * @return Boolean isUpdated
     */
    public boolean isUpdated(
            String bookingNumber, 
            Date date, 
            String time, 
            String name, 
            String phoneNumber, 
            int partySize
    )
    {
    boolean updated = false;
    int availability = 0;
    /* For every booking that has the same date and time, 
       we get the number of guests and add them to the availability.
       We do not add the guests of the booking we are trying to update
    */
    for (int i=0; i < reservations.size(); i++){
        if(!reservations.get(i).getBookingNumber().equals(bookingNumber)
            && date.equals(reservations.get(i).getDate())
            && time.equals(reservations.get(i).getTime()))
        {
            availability += reservations.get(i).getPartySize();
        }
    }
    
    /* if there is availability we iterate through the array list,
        find the booking we need to update and
        update its details 
    */
    if (partySize + availability <= maximumCapacity)
    {
        for (int i=0; i <reservations.size(); i++){
            if(bookingNumber.equals(reservations.get(i).getBookingNumber()))
            {
                reservations.get(i).setDate(date);
                reservations.get(i).setTime(time);
                reservations.get(i).setPartySize(partySize);
                reservations.get(i).setName(name);
                reservations.get(i).setPhoneNumber(phoneNumber);
                updated = true;
                return updated;
                       
            }
        }
    }
    return updated;
    }
    // end of isUpdated method
    
    /**
     * Resets all input fields
     * @author Stavroula Niarchou
     */
    public void reset(){
        txtBookingRef.setText("");
        txtName.setText("");
        txtPhoneNumber.setText("");
        rdoBtnSlot1.setSelected(true);
        SpinnerPartySize.setValue(1);
    }

    /**
     * Creates new form UpdateDeleteBooking
     */
    public UpdateDeleteBooking() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblBookingRef = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        rdoBtnSlot1 = new javax.swing.JRadioButton();
        rdoBtnSlot2 = new javax.swing.JRadioButton();
        rdoBtnSlot3 = new javax.swing.JRadioButton();
        rdoBtnSlot4 = new javax.swing.JRadioButton();
        lblGuests = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        txtPhoneNumber = new javax.swing.JTextField();
        txtBookingRef = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        SpinnerPartySize = new javax.swing.JSpinner();
        btnBack = new javax.swing.JButton();
        jCalendar1 = new com.toedter.calendar.JCalendar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 0));

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));

        lblBookingRef.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblBookingRef.setText("Booking Reference");

        lblDate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblDate.setText("Date");

        buttonGroup1.add(rdoBtnSlot1);
        rdoBtnSlot1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoBtnSlot1.setSelected(true);
        rdoBtnSlot1.setText("15:00-17:00");

        buttonGroup1.add(rdoBtnSlot2);
        rdoBtnSlot2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoBtnSlot2.setText("17:00-19:00");

        buttonGroup1.add(rdoBtnSlot3);
        rdoBtnSlot3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoBtnSlot3.setText("19:00-21:00");

        buttonGroup1.add(rdoBtnSlot4);
        rdoBtnSlot4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoBtnSlot4.setText("21:00-23:00");

        lblGuests.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblGuests.setText("Guests");

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblName.setText("Name");

        lblPhone.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPhone.setText("Phone Number");

        btnUpdate.setBackground(new java.awt.Color(0, 0, 51));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 0, 51));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnFind.setBackground(new java.awt.Color(0, 0, 102));
        btnFind.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnFind.setForeground(new java.awt.Color(255, 255, 255));
        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        lblTime.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTime.setText("Time");

        SpinnerPartySize.setModel(new javax.swing.SpinnerNumberModel(1, 1, 50, 1));
        SpinnerPartySize.setEditor(new javax.swing.JSpinner.NumberEditor(SpinnerPartySize, ""));

        btnBack.setBackground(new java.awt.Color(0, 0, 51));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnFind)
                                    .addComponent(lblTime)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(rdoBtnSlot3)
                                        .addComponent(rdoBtnSlot1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(lblGuests)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rdoBtnSlot2)
                                            .addComponent(rdoBtnSlot4)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(SpinnerPartySize, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblName)
                                        .addComponent(lblPhone)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                    .addComponent(txtName))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 77, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblBookingRef)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBookingRef)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookingRef)
                    .addComponent(txtBookingRef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFind)
                            .addComponent(lblDate))
                        .addGap(26, 26, 26)
                        .addComponent(lblTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoBtnSlot1)
                            .addComponent(rdoBtnSlot2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoBtnSlot3)
                            .addComponent(rdoBtnSlot4))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGuests)
                            .addComponent(SpinnerPartySize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhone))
                        .addGap(18, 49, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jCalendar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Gets booking number, passes it to the isDeleted method and confirms if
     * booking is deleted or not
     * @author Stavroula Niarchou
     * @param evt 
     */
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String bookingReference = txtBookingRef.getText();
        int answer = JOptionPane.showConfirmDialog(
                    null, 
                    "Are you sure you want to delete your booking?",
                    "Delete booking",
                    JOptionPane.YES_NO_OPTION
                    );
    /* if the answer is yes, call the isDeleted method   
    */
    if ("0".equals(String.valueOf(answer))){   
        boolean isDeleted = deleteBooking(bookingReference);
        if (isDeleted == true){
            JOptionPane.showMessageDialog(
                null, 
                "Your booking has been deleted!", 
                "Delete booking", 
                JOptionPane.INFORMATION_MESSAGE
            );    
        }
        else{
            JOptionPane.showMessageDialog(
                null, 
                "The booking number is invalid! Please try again!", 
                "Delete booking", 
                JOptionPane.INFORMATION_MESSAGE);  
        }
    }
    reset();
    }//GEN-LAST:event_btnDeleteActionPerformed
    /**
     * Takes user back to main form
     * @param evt 
     */
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
       StaffOptions staff = new StaffOptions();
       staff.setVisible(true);
       dispose();
    }//GEN-LAST:event_btnBackActionPerformed
    /**
     * Button gets booking reference number and populates the fields
     * with the booking details, if booking number is invalid it doesn't
     * do anything
     * @author Stavroula Niarchou
     * @param evt 
     */
    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        String BookingReference = txtBookingRef.getText();
        
        for (int i=0; i < reservations.size(); i++){
            if (BookingReference.equals(reservations.get(i).getBookingNumber()))
            {
               jCalendar1.setDate((Date) reservations.get(i).getDate());
               txtName.setText(reservations.get(i).getName());
               txtPhoneNumber.setText(reservations.get(i).getPhoneNumber());
               SpinnerPartySize.setValue(reservations.get(i).getPartySize());
               String time = reservations.get(i).getTime();
               switch (time) {
                    case "15:00-17:00":
                        rdoBtnSlot1.setSelected(true);
                        break;
                    case "17:00-19:00":
                        rdoBtnSlot2.setSelected(true);
                        break;
                    case "19:00-21:00":
                        rdoBtnSlot3.setSelected(true);
                        break;
                    case "21:00-23:00":
                        rdoBtnSlot4.setSelected(true);
                        break;
                    default:
                        rdoBtnSlot1.setSelected(true);
                        break;
                }
            }
        }
    }//GEN-LAST:event_btnFindActionPerformed

    /**
     * Button updates booking and confirms if booking is updated or not
     * @author Stavroula Niarchou
     * @param evt 
     */
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       // get user input from form
       String bookingNumber = txtBookingRef.getText();
       String name = txtName.getText();
       String phoneNumber = txtPhoneNumber.getText();
       Date myDate = jCalendar1.getDate();
       Date date = formatDate(myDate);
       String time;
        if (rdoBtnSlot1.isSelected()){
            time = "15:00-17:00";
        }
        else if (rdoBtnSlot2.isSelected()){
            time = "17:00-19:00";
        }
        else if (rdoBtnSlot3.isSelected()){
            time = "19:00-21:00";
        }
        else{
            time = "21:00-23:00";
        }
        int partySize = (Integer)SpinnerPartySize.getValue();
        
        /* call isUpdated method and pass user input,
            display message to inform user if update was successful or not      
        */
        boolean update = isUpdated(
                            bookingNumber,
                            date, 
                            time, 
                            name, 
                            phoneNumber, 
                            partySize
                        );
        if (update == true)
        {
            JOptionPane.showMessageDialog(
                null,
                "Your booking has been updated",
                "Update Booking", 
                JOptionPane.INFORMATION_MESSAGE);
                txtBookingRef.setText("");
                reset();
        }
        else
        {
            JOptionPane.showMessageDialog(
                null, 
                """
                    We are sorry but we were unable to update your booking
                    Please check your booking reference or choose a 
                    different date or time slot""",
               "Update Booking", 
               JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateDeleteBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateDeleteBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner SpinnerPartySize;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JCalendar jCalendar1;
    public static javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblBookingRef;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblGuests;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblTime;
    private javax.swing.JRadioButton rdoBtnSlot1;
    private javax.swing.JRadioButton rdoBtnSlot2;
    private javax.swing.JRadioButton rdoBtnSlot3;
    private javax.swing.JRadioButton rdoBtnSlot4;
    private javax.swing.JTextField txtBookingRef;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNumber;
    // End of variables declaration//GEN-END:variables
}
